// <auto-generated />
using System;
using DataCollector.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataCollector.Data.Migrations
{
    [DbContext(typeof(CreatorContext))]
    partial class CreatorContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DataCollector.Data.ChannelEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatorEntityId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CreatorEntityId");

                    b.ToTable("ChannelEntity");
                });

            modelBuilder.Entity("DataCollector.Data.CreatorEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CountryOrSection")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Creator");
                });

            modelBuilder.Entity("DataCollector.Data.FeedEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ChannelEntityId")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ChannelEntityId");

                    b.ToTable("FeedEntity");
                });

            modelBuilder.Entity("DataCollector.Data.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatorEntityId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CreatorEntityId");

                    b.ToTable("Tag");
                });

            modelBuilder.Entity("DataCollector.Data.ChannelEntity", b =>
                {
                    b.HasOne("DataCollector.Data.CreatorEntity", null)
                        .WithMany("Channels")
                        .HasForeignKey("CreatorEntityId");
                });

            modelBuilder.Entity("DataCollector.Data.FeedEntity", b =>
                {
                    b.HasOne("DataCollector.Data.ChannelEntity", null)
                        .WithMany("Feeds")
                        .HasForeignKey("ChannelEntityId");
                });

            modelBuilder.Entity("DataCollector.Data.Tag", b =>
                {
                    b.HasOne("DataCollector.Data.CreatorEntity", null)
                        .WithMany("Tags")
                        .HasForeignKey("CreatorEntityId");
                });

            modelBuilder.Entity("DataCollector.Data.ChannelEntity", b =>
                {
                    b.Navigation("Feeds");
                });

            modelBuilder.Entity("DataCollector.Data.CreatorEntity", b =>
                {
                    b.Navigation("Channels");

                    b.Navigation("Tags");
                });
#pragma warning restore 612, 618
        }
    }
}
